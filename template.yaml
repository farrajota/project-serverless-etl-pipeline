AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    A serverless ETL pipeline for storing and processing
    visitor gender hits couple with a gender service to
    predict a visitor's gender by ID.


Parameters:

    S3BucketFirehoseStreamName:
        Type: String
        Default: case-study-kinesis-firehose-stream
        Description: "S3 bucket name to store the firehose stream data"

    FirehoseS3Prefix:
        Type: String
        Default: firehose/
        Description: "The S3 Key prefix for Kinesis Firehose."

    FirehoseCompressionFormat:
        Type: String
        Default: UNCOMPRESSED
        AllowedValues: [UNCOMPRESSED, GZIP, Snappy]
        Description: "Compression format used by Kinesis Firehose"

    FirehoseBufferingInterval:
        Type: Number
        Default: 60
        MinValue: 60
        MaxValue: 900
        Description: "How long Firehose will wait before writing a new batch into S3"

    FirehoseBufferingSize:
        Type: Number
        Default: 10
        MinValue: 1
        MaxValue: 128
        Description: "Maximum batch size in MB"

    FirehoseLambdaTimeout:
        Type: Number
        Default: 60
        MinValue: 5
        MaxValue: 900
        Description: "Maximum Lambda execution time in seconds"

    FirehoseLambdaMemorySize:
        Type: String
        Default: 128
        AllowedValues: [128,192,256,320,384,448,512,576,640,704,768,832,896,960,1024,1088,1152,1216,1280,1344,1408,1472,1536]

Resources:

    S3BucketStoreFirehoseStream:
        Type: 'AWS::S3::Bucket'
        #DeletionPolicy: Retain
        Properties:
            AccessControl: Private
            BucketName: !Ref S3BucketFirehoseStreamName

    KinesisFirehoseDeliveryStream:
        Type: AWS::KinesisFirehose::DeliveryStream
        DependsOn:
            - FirehoseDeliveryPolicy
        Properties:
            DeliveryStreamType: DirectPut
            ExtendedS3DestinationConfiguration:
                BucketARN: !GetAtt S3BucketStoreFirehoseStream.Arn
                BufferingHints:
                    IntervalInSeconds: !Ref FirehoseBufferingInterval
                    SizeInMBs: !Ref FirehoseBufferingSize
                CompressionFormat: !Ref FirehoseCompressionFormat
                Prefix: !Ref FirehoseS3Prefix
                RoleARN: !GetAtt FirehoseDeliveryRole.Arn
                ProcessingConfiguration:
                    Enabled: 'true'
                    Processors:
                        - Parameters:
                            - ParameterName: LambdaArn
                              ParameterValue: !GetAtt FirehoseStreamProcessFunction.Arn
                          Type: Lambda

    FirehoseDeliveryRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                  - Sid: ''
                    Effect: Allow
                    Principal:
                        Service: firehose.amazonaws.com
                    Action: 'sts:AssumeRole'
                    Condition:
                        StringEquals:
                            'sts:ExternalId': !Ref 'AWS::AccountId'

    FirehoseDeliveryPolicy:
        Type: AWS::IAM::Policy
        Properties:
            PolicyName: firehose_delivery_policy
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                        - 'lambda:InvokeFunction'
                        - 's3:AbortMultipartUpload'
                        - 's3:GetBucketLocation'
                        - 's3:GetObject'
                        - 's3:ListBucket'
                        - 's3:ListBucketMultipartUploads'
                        - 's3:PutObject'
                      Resource:
                        - !GetAtt FirehoseStreamProcessFunction.Arn
                        - !Join
                            - ''
                            - - 'arn:aws:s3:::'
                              - !Ref S3BucketStoreFirehoseStream
                        - !Join
                            - ''
                            - - 'arn:aws:s3:::'
                              - !Ref S3BucketStoreFirehoseStream
                              - '*'
            Roles:
                - !Ref FirehoseDeliveryRole

    FirehoseStreamProcessFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: kinesis_firehose_stream_process/
            Handler: app.lambda_handler
            Runtime: python3.7
            Description: >-
                An Amazon Kinesis Firehose stream processor that appends a timestamp
                to input records.
            MemorySize: !Ref FirehoseLambdaMemorySize
            Timeout: !Ref FirehoseLambdaTimeout


Outputs:

    S3BucketNameKinesisFirehose:
        Description: "S3 bucket to store the streaming data from Kinesis Firehose"
        Value: !GetAtt S3BucketStoreFirehoseStream.Arn

    KinesisFirehoseDeliverStream:
        Description: "Kinesis Firehose Delivery Stream ARN"
        Value: !GetAtt KinesisFirehoseDeliveryStream.Arn

    Region:
        Description: "The region this template was launched in."
        Value: !Ref 'AWS::Region'

    FirehoseStreamProcessFunction:
        Description: "The Lambda Function that will process Firehose records"
        Value: !Ref FirehoseStreamProcessFunction
